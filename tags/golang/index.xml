<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on /home/kiennt</title>
    <link>/blog/tags/golang/</link>
    <description>Recent content in golang on /home/kiennt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Apr 2020 15:59:21 +0700</lastBuildDate>
    
        <atom:link href="/blog/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang: Block forever</title>
      <link>/blog/posts/golang-use-for-select-right-way/</link>
      <pubDate>Mon, 27 Apr 2020 15:59:21 +0700</pubDate>
      
      <guid>/blog/posts/golang-use-for-select-right-way/</guid>
      <description>Sometimes, you want to block the current goroutine when allowing others to continue. Here is some tricks I&amp;rsquo;ve collected:
References Firstly give them some credits:
 https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/ https://pliutau.com/different-ways-to-block-go-runtime-forever/   NOTE: I run these with Golang 1.12
 The original package main import &amp;#34;fmt&amp;#34; func show() { for i := 1; i &amp;lt; 9696969; i++ { time.Sleep(1000) fmt.Println(i) } } func main() { go show() // The main goroutine is exited before the show() be done.</description>
      
    </item>
    
  </channel>
</rss>
