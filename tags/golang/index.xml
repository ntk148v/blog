<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on /home/kiennt</title><link>https://ntk148v.github.io/blog/tags/golang/</link><description>Recent content in golang on /home/kiennt</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Nov 2021 17:26:44 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/blog/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Goignore</title><link>https://ntk148v.github.io/blog/posts/goignore/</link><pubDate>Fri, 26 Nov 2021 17:26:44 +0700</pubDate><guid>https://ntk148v.github.io/blog/posts/goignore/</guid><description>Goignore - A .gitignore wizard which gnerates .gitignore files from the command line for you. Inspired by joe 1. Features # No installation necessary - just use the binary. Works on Linux, Windows &amp;amp; MacOS. Interactive user interface with bubbletea: Pagination, Filtering, Help&amp;hellip; Supports all Github-supported .gitignore files. 2. Install # Download the latest binary from the Release page. It&amp;rsquo;s the easiest way to get started with goignore.</description></item><item><title>Golang: Block forever</title><link>https://ntk148v.github.io/blog/posts/golang-block-forever/</link><pubDate>Mon, 27 Apr 2020 15:59:21 +0700</pubDate><guid>https://ntk148v.github.io/blog/posts/golang-block-forever/</guid><description>Sometimes, you want to block the current goroutine when allowing others to continue. Here is some tricks I&amp;rsquo;ve collected:
1. References # Firstly give them some credits:
https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/ https://pliutau.com/different-ways-to-block-go-runtime-forever/ NOTE: I run these with Golang 1.12
2. The original # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import &amp;#34;fmt&amp;#34; func show() { for i := 1; i &amp;lt; 9696969; i++ { time.</description></item></channel></rss>